alias ls="ls -hFG"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en1"
alias ips="ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1'"
alias ipv6="curl -6 \"http://ipv6.test-ipv6.com/ip/?callback=?\" -s  | cut -d \\\" -f 4"

# Enhanced WHOIS lookups
alias whois="whois -h whois-servers.net"

# Flush Directory Service cache
alias flushdns="dscacheutil -flushcache"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Pretty cool HTTP hack: (from @janmoesen)
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "$method"="lwp-request -m '$method'"
done

# Show/hide hidden files in Finder
alias showfinder="defaults write com.apple.Finder AppleShowAllFiles -bool true && killall Finder"
alias hidefinder="defaults write com.apple.Finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

alias nano='nano -w';

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Get OS X Software Updates, update Homebrew itself, and upgrade installed Homebrew packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade; upgrade_oh_my_zsh'

# View HTTP traffic
alias sniffhttp="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
# View SIP traffic
alias sniffsip="sudo ngrep -q -W byline -d 'en1' -t '' 'udp port 5060'"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

# Simple python web server (in current directory)
alias serveweb="python -m SimpleHTTPServer"

# All the dig info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

# Open man page in preview
function pman() {
	man -t "${1}" | open -f -a Preview
}

# Countdown timer aka pizza-timer - requires gdate (gnu userland)
function countdown() {
	if ! [[ "$1" =~ ^[0-9]+$ ]] ; then
		echo "Usage: countdown <time in minutes> [\"<message>\"]";
		return 1;
	fi;

	MIN=$1;
	for ((i=MIN*60;i>=0;i--)); do
		echo -ne "\r$(gdate -d"0+$i sec" +%H:%M:%S)";
		sleep 1;
	done;

	if [ -n "$2" ]; then
		if command -v growlnotify $> /dev/null ; then
			growlnotify -w -p High -t "Countdown" -m "$2"
		fi

		# Check volume
		VOLUME=`osascript -e "output volume of (get volume settings)"`

		if [ $VOLUME -lt 50 ] ; then
			osascript -e "set volume output volume 90"
		fi

		say "$2";

		osascript -e "set volume output volume $VOLUME"

	fi;

	return 0;
}

alias stopwatch="echo \"Ctrl-D to stop..\" ; time read"

alias sshik="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# credit: http://nparikh.org/notes/zshrc.txt
# Usage: extract <file>
# Description: extracts archived files / mounts disk images
# Note: .dmg/hdiutil is Mac OS X-specific.
extract () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1                        ;;
            *.tar.gz)   tar -zxvf $1                        ;;
            *.bz2)      bunzip2 $1                          ;;
            *.dmg)      hdiutil mount $1                    ;;
            *.gz)       gunzip $1                           ;;
            *.tar)      tar -xvf $1                         ;;
            *.tbz2)     tar -jxvf $1                        ;;
            *.tgz)      tar -zxvf $1                        ;;
            *.zip)      unzip $1                            ;;
            *.ZIP)      unzip $1                            ;;
            *.pax)      cat $1 | pax -r                     ;;
            *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
            *.Z)        uncompress $1                       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

